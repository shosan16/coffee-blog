---
description: データベース設計図とアクセス戦略を説明するドキュメント
globs:
alwaysApply: false
---
# ER図

```mermaid
erDiagram
    AUTHOR ||--o{ POST : creates
    BARISTA ||--o{ POST : "developed recipe for"
    POST ||--o{ STEP : "contains"
    POST ||--o{ EQUIPMENT : "uses"
    POST ||--o{ POST_TAG : "has"
    TAG ||--o{ POST_TAG : "applied to"
    BARISTA ||--o{ SOCIAL_LINK : "has"
    EQUIPMENT_TYPE ||--o{ EQUIPMENT : "categorizes"

    AUTHOR {
        bigint author_id PK
        text name
        text email
        text password_hash
        text bio
        text profile_image
        boolean is_admin
        timestamp created_at
        timestamp updated_at
    }

    BARISTA {
        bigint barista_id PK
        text name
        text affiliation
        timestamp created_at
        timestamp updated_at
    }

    SOCIAL_LINK {
        bigint link_id PK
        bigint barista_id FK
        text platform
        text url
        timestamp created_at
        timestamp updated_at
    }

    POST {
        bigint post_id PK
        bigint author_id FK
        bigint barista_id FK
        text title
        text summary
        text remarks
        text grind_size
        text roast_level
        int bean_weight
        int water_amount
        int water_temp
        int brewing_time
        int view_count
        boolean is_published
        timestamp published_at
        timestamp created_at
        timestamp updated_at
    }

    STEP {
        bigint step_id PK
        bigint post_id FK
        int step_order
        int time_seconds
        text description
        text image
        timestamp created_at
        timestamp updated_at
    }

    EQUIPMENT_TYPE {
        bigint type_id PK
        text name
        text description
        timestamp created_at
        timestamp updated_at
    }

    EQUIPMENT {
        bigint equipment_id PK
        bigint post_id FK
        bigint type_id FK
        text name
        text brand
        text description
        text affiliate_link
        timestamp created_at
        timestamp updated_at
    }

    TAG {
        bigint tag_id PK
        text name
        text slug
        timestamp created_at
        timestamp updated_at
    }

    POST_TAG {
        bigint post_id FK
        bigint tag_id FK
        timestamp created_at
    }
```

## テーブル構造

1. **posts**
   - レシピの基本情報を管理
   - タイトル、説明、抽出条件などを保持

2. **steps**
   - レシピの手順を管理
   - 順序、時間、アクションを記録

3. **equipment**
   - 使用する器具の情報を管理
   - 名前、ブランド、アフィリエイトリンクを保持

## リレーション

- posts - steps: 1対多
- posts - equipment: 多対多
- posts - tags: 多対多（post_tagを介して）

## データアクセス戦略

- **Prisma Client の活用:**
  - 型安全なデータアクセス
  - トランザクション管理
  - リレーション処理の効率化

## パフォーマンス最適化

- **データベースクエリの最適化:**
  - インデックス設計
  - N+1問題の回避
  - クエリの効率化
